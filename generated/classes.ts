// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// @ts-ignore
import { GraphQLDateTime as DateTime } from "graphql-iso-date";
// @ts-ignore
import { GraphQLID as ID } from "graphql";
// @ts-ignore
import {
  ArgsType,
  Field as TypeGraphQLField,
  Float,
  InputType as TypeGraphQLInputType,
  Int
} from "type-graphql";
// @ts-ignore
import { registerEnumType } from "type-graphql";

// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require("graphql-type-json");

// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs } from "warthog";
// @ts-ignore
import { MemberRegistered } from "../src/modules/member-registered/member-registered.model";

export enum MemberRegisteredOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  memberId_ASC = "memberId_ASC",
  memberId_DESC = "memberId_DESC",

  accountId_ASC = "accountId_ASC",
  accountId_DESC = "accountId_DESC"
}

registerEnumType(MemberRegisteredOrderByEnum, {
  name: "MemberRegisteredOrderByInput"
});

@TypeGraphQLInputType()
export class MemberRegisteredWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField({ nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField({ nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField({ nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField({ nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField({ nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField({ nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  memberId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  memberId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  memberId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  memberId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  memberId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  memberId_in?: number[];

  @TypeGraphQLField({ nullable: true })
  accountId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  accountId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  accountId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  accountId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  accountId_in?: string[];
}

@TypeGraphQLInputType()
export class MemberRegisteredWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class MemberRegisteredCreateInput {
  @TypeGraphQLField()
  memberId!: number;

  @TypeGraphQLField()
  accountId!: string;
}

@TypeGraphQLInputType()
export class MemberRegisteredUpdateInput {
  @TypeGraphQLField({ nullable: true })
  memberId?: number;

  @TypeGraphQLField({ nullable: true })
  accountId?: string;
}

@ArgsType()
export class MemberRegisteredWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => MemberRegisteredWhereInput, { nullable: true })
  where?: MemberRegisteredWhereInput;

  @TypeGraphQLField(() => MemberRegisteredOrderByEnum, { nullable: true })
  orderBy?: MemberRegisteredOrderByEnum;
}

@ArgsType()
export class MemberRegisteredCreateManyArgs {
  @TypeGraphQLField(() => [MemberRegisteredCreateInput])
  data!: MemberRegisteredCreateInput[];
}

@ArgsType()
export class MemberRegisteredUpdateArgs {
  @TypeGraphQLField() data!: MemberRegisteredUpdateInput;
  @TypeGraphQLField() where!: MemberRegisteredWhereUniqueInput;
}
